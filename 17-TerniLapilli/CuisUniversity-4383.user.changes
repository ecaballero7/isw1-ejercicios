

----STARTUP---- (31 October 2020 20:17:51) as /mnt/6750e462-c385-4872-92cc-c2b6e5c52075/Documents/UBA/1er cuatri 2020/Ingeniería 1/VM CUIS/CuisUniversity-4383.image!


----End fileIn of /home/guille/Desktop/Ingeniería 1/isw1-ejercicios/17-TerniLapilli/TerniLapilli.st----!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 20:18:14'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 20:18:14'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 20:18:14'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 20:18:14'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 20:18:14'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 20:18:14'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 20:18:14'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 20:18:14'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 20:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 20:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 20:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 20:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 20:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 20:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 20:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 20:18:42'!
PASSED!
!TerniLapilliTest methodsFor: 'order of Players' stamp: 'G. B. 10/31/2020 20:18:55' prior: 50909014!
test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	self 
	should: [ terniLapili putXAt: 0@3]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !
!TerniLapilliTest methodsFor: 'order of Players' stamp: 'G. B. 10/31/2020 20:19:35'!
test09shouldSavePositionIfPlayerOPutsAValidPosition
	
	|terniLapili expectedPosition |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	expectedPosition := OrderedCollection with: 0@0. 	
	
	self assert: expectedPosition equals: terniLapili XPositions  ! !
!TerniLapilliTest methodsFor: 'order of Players' stamp: 'G. B. 10/31/2020 20:19:52' prior: 50909184!
test09shouldSavePositionIfPlayerOPutsAValidPosition
	
	|terniLapili expectedPosition |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	expectedPosition := OrderedCollection with: 0@0. 	
	
	terniLapili putXAt: 0@0.

	
	
	self assert: expectedPosition equals: terniLapili XPositions  ! !
!TerniLapilliTest methodsFor: 'order of Players' stamp: 'G. B. 10/31/2020 20:20:20' prior: 50909196!
test09shouldSavePositionIfPlayerOPutsAValidPosition
	
	|terniLapili expectedPosition |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	
	expectedPosition := OrderedCollection with: 1@2. 	
	terniLapili putOAt: 1@2.
	
	
	self assert: expectedPosition equals: terniLapili OPositions  ! !

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 20:20:22'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 20:20:22'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 20:20:22'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 20:20:22'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 20:20:22'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 20:20:22'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 20:20:22'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 20:20:22'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 20:20:22'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 20:20:22'!
PASSED!
!TerniLapilliTest methodsFor: 'order of Players' stamp: 'G. B. 10/31/2020 20:20:54'!
test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	self 
	should: [ terniLapili putXAt: 0@3]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !
!TerniLapilliTest methodsFor: 'order of Players' stamp: 'G. B. 10/31/2020 20:21:40' prior: 50909258!
test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@1.
	
	self 
	should: [ terniLapili putOAt: 3@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 20:21:49'!
FAILURE!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 20:22:15' prior: 50909069!
putOAt: aPoint 
	
	currentPlayer = #X ifTrue: [^ self error: self class shouldPlayPlayerXErrorDescription ].
	
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].

	OPositions add: aPoint.
	currentPlayer := #X. ! !

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 20:22:18'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 20:22:18'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 20:22:18'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 20:22:18'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 20:22:18'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 20:22:18'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 20:22:18'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 20:22:18'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 20:22:18'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 20:22:18'!
PASSED!
!TerniLapilliTest methodsFor: 'order of Players' stamp: 'G. B. 10/31/2020 20:28:09'!
test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@1.
	
	self 
	should: [ terniLapili putOAt: 3@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !
!TerniLapilliTest methodsFor: 'order of Players' stamp: 'G. B. 10/31/2020 20:29:27' prior: 50909336!
test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@1.
	terniLapili putOAt: 0@2.

	
	self 
	should: [ terniLapili putXAt: 0@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAnEmptyPosition ].! !

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 20:29:52'!
FAILURE!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 20:30:55' prior: 50909077!
putXAt: aPoint 
	
	currentPlayer = #O ifTrue: [^ self error: self class shouldPlayPlayerOErrorDescription ].
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	
	XPositions add: aPoint .
	currentPlayer := #O. ! !
!TerniLapili class methodsFor: 'errors' stamp: 'G. B. 10/31/2020 20:31:30'!
playersShouldChooseAnEmptyPosition
	
	^ 'Players should choose an empty position!!'! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 10/31/2020 20:31:52'!
isEmptyPosition: aPoint
	
	(aPoint x  > 2 or: aPoint y  > 2) ifTrue: [^ false].
	(aPoint x  < 0 or: aPoint y  < 0) ifTrue: [^ false].
	^ true! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 10/31/2020 20:33:57' prior: 50909386!
isEmptyPosition: aPoint
	
	[(aPoint includes: 	XPositions) or: (aPoint includes: OPositions)] ifFalse: [^ false].
	
	^ true! !

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 20:34:01'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 20:34:01'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 20:34:01'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 20:34:01'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 20:34:01'!
ERROR!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 20:34:01'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 20:34:01'!
ERROR!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 20:34:01'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 20:34:01'!
ERROR!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 20:34:01'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 20:34:01'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 20:34:13'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 20:34:13'!
ERROR!
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 10/31/2020 20:34:40' prior: 50909394!
isEmptyPosition: aPoint
	
	((aPoint includes: 	XPositions) or: (aPoint includes: OPositions)) ifFalse: [^ false].
	
	^ true! !

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 20:34:43'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 20:34:43'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 20:34:43'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 20:34:43'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 20:34:43'!
ERROR!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 20:34:43'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 20:34:43'!
ERROR!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 20:34:43'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 20:34:43'!
ERROR!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 20:34:43'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 20:34:43'!
ERROR!
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 10/31/2020 20:35:15' prior: 50909449!
isEmptyPosition: aPoint
	
	((XPositions includes: aPoint 	) or: (OPositions includes: aPoint)) ifFalse: [^ false].
	
	^ true! !

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 20:35:17'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 20:35:17'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 20:35:17'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 20:35:17'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 20:35:17'!
ERROR!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 20:35:17'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 20:35:17'!
ERROR!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 20:35:17'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 20:35:17'!
ERROR!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 20:35:17'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 20:35:17'!
ERROR!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 20:35:21'!
ERROR!
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 10/31/2020 20:35:58' prior: 50909496!
isEmptyPosition: aPoint
	
	((XPositions includes: aPoint 	) or: (OPositions includes: aPoint)) ifTrue: [^ false].
	
	^ true! !

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 20:36:00'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 20:36:00'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 20:36:00'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 20:36:00'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 20:36:00'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 20:36:00'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 20:36:00'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 20:36:00'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 20:36:00'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 20:36:00'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 20:36:00'!
PASSED!
!TerniLapilliTest methodsFor: 'order of Players' stamp: 'G. B. 10/31/2020 20:37:01'!
test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@1.
	terniLapili putOAt: 0@2.

	
	self 
	should: [ terniLapili putXAt: 0@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAnEmptyPosition ].! !
!TerniLapilliTest methodsFor: 'order of Players' stamp: 'G. B. 10/31/2020 20:37:21' prior: 50909593!
test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@1.
	terniLapili putOAt: 0@2.
	terniLapili putXAt: 1@1.

	
	self 
	should: [ terniLapili putOAt: 0@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAnEmptyPosition ].! !

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 20:37:22'!
FAILURE!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 20:37:40' prior: 50909288!
putOAt: aPoint 
	
	currentPlayer = #X ifTrue: [^ self error: self class shouldPlayPlayerXErrorDescription ].
	
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].

	OPositions add: aPoint.
	currentPlayer := #X. ! !

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 20:37:42'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 20:37:42'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 20:37:42'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 20:37:42'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 20:37:42'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 20:37:42'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 20:37:42'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 20:37:42'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 20:37:42'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 20:37:42'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 20:37:42'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 20:37:42'!
PASSED!
!TerniLapilliTest methodsFor: 'game over tests' stamp: 'G. B. 10/31/2020 20:45:12'!
test13PlayerXWinsIfPlayerXMakesVerticalLine
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 0@1.
	terniLapili putOAt: 2@0.
	terniLapili putXAt: 0@2.

	
	self 
	should: [ terniLapili putOAt: 0@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAnEmptyPosition ].! !
!TerniLapilliTest methodsFor: 'game over tests' stamp: 'G. B. 10/31/2020 20:46:39' prior: 50909685!
test13PlayerXWinsIfPlayerXMakesVerticalLine
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 0@1.
	terniLapili putOAt: 2@0.
	terniLapili putXAt: 0@2.

	
	self assert: terniLapili isOver. 
	self assert: terniLapili hasPlayerXWon. 
! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 20:48:00' prior: 50909367!
putXAt: aPoint 
	
	currentPlayer = #O ifTrue: [^ self error: self class shouldPlayPlayerOErrorDescription ].
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	
	XPositions add: aPoint .
	self checkWinner: XPositions.
	currentPlayer := #O. ! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 10/31/2020 20:48:42'!
checkWinner: aPlayer! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 20:49:02' prior: 50909714!
putXAt: aPoint 
	
	currentPlayer = #O ifTrue: [^ self error: self class shouldPlayPlayerOErrorDescription ].
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	
	XPositions add: aPoint .
	self checkWinner.
	currentPlayer := #O. ! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 10/31/2020 20:49:09'!
checkWinner! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 10/31/2020 20:52:07' prior: 50909748!
checkWinner

	 """ver linea vertical """
	! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 10/31/2020 20:52:53' prior: 50909752!
checkWinner

	 """ver linea vertical """
	(0@0)! !
!TerniLapili methodsFor: 'initialization' stamp: 'G. B. 10/31/2020 20:55:28' prior: 50909040 overrides: 16896425!
initialize
	
	currentPlayer := #X. 
	XPositions := Set new.
	OPositions := Set new. ! !

!methodRemoval: TerniLapili #checkWinner: stamp: 'G. B. 10/31/2020 20:55:57'!
checkWinner: aPlayer!
!TerniLapilliTest methodsFor: 'positions tests' stamp: 'G. B. 10/31/2020 20:56:29' prior: 50909002!
test07shouldSavePositionIfPlayerXPutAvalidPosition
	
	|terniLapili expectedPosition |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	expectedPosition := Set with: 0@0. 	
	
	self assert: expectedPosition equals: terniLapili XPositions  ! !
!TerniLapilliTest methodsFor: 'positions tests' stamp: 'G. B. 10/31/2020 20:56:38' prior: 50909209!
test09shouldSavePositionIfPlayerOPutsAValidPosition
	
	|terniLapili expectedPosition |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	
	expectedPosition := Set with: 1@2. 	
	terniLapili putOAt: 1@2.
	
	
	self assert: expectedPosition equals: terniLapili OPositions  ! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 10/31/2020 20:57:26' prior: 50909757!
checkWinner

	 """ver linea vertical """
	| verticalLine0 |
	verticalLine0 _ Set with: 0@0 with: 0@1 with: 0@2.! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 10/31/2020 20:57:48' prior: 50909797!
checkWinner

	 """ver linea vertical """
	| verticalLine0 |
	verticalLine0 _ Set with: 0@0 with: 0@1 with: 0@2.
	^ XPositions = verticalLine0.! !

!classDefinition: #TerniLapili category: 'TerniLapilli' stamp: 'G. B. 10/31/2020 20:59:08'!
Object subclass: #TerniLapili
	instanceVariableNames: 'currentPlayer XPositions OPositions gameOver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapili category: 'TerniLapilli' stamp: 'G. B. 10/31/2020 20:59:10'!
Object subclass: #TerniLapili
	instanceVariableNames: 'currentPlayer XPositions OPositions gameOver hasPlayerXWon'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 10/31/2020 20:59:06' prior: 50909804!
checkWinner

	 """ver linea vertical """
	| verticalLine0 |
	verticalLine0 _ Set with: 0@0 with: 0@1 with: 0@2.
	XPositions = verticalLine0 ifTrue: [
		gameOver _ true.
		hasPlayerXWon _ true.
		].! !

!classDefinition: #TerniLapili category: 'TerniLapilli' stamp: 'G. B. 10/31/2020 20:59:33'!
Object subclass: #TerniLapili
	instanceVariableNames: 'currentPlayer XPositions OPositions gameOver hasPlayerXWon isOver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 10/31/2020 20:59:31'!
isOver

	^isOver.! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 10/31/2020 20:59:42'!
hasPlayerXWon

	^isOver.! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 10/31/2020 20:59:47' prior: 50909850!
hasPlayerXWon

	^hasPlayerXWon.! !

!methodRemoval: TerniLapili #isEmpty stamp: 'G. B. 10/31/2020 21:00:10'!
isEmpty
	
	^ true.!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 10/31/2020 21:01:00' prior: 50909829!
checkWinner

	 """ver linea vertical """
	| verticalLine0 |
	verticalLine0 _ Set with: 0@0 with: 0@1 with: 0@2.
	XPositions = verticalLine0 ifTrue: [
		isOver _ true.
		hasPlayerXWon _ true.
		].! !

Object subclass: #TerniLapili
	instanceVariableNames: 'currentPlayer XPositions OPositions hasPlayerXWon isOver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapili category: 'TerniLapilli' stamp: 'G. B. 10/31/2020 21:01:07'!
Object subclass: #TerniLapili
	instanceVariableNames: 'currentPlayer XPositions OPositions hasPlayerXWon isOver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVerticalLine stamp: 'G. B. 10/31/2020 21:01:13'!
PASSED!
!TerniLapilliTest methodsFor: 'game over tests' stamp: 'G. B. 10/31/2020 21:03:42'!
test13PlayerXWinsIfPlayerXMakesVertical0
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 0@1.
	terniLapili putOAt: 2@0.
	terniLapili putXAt: 0@2.

	
	self assert: terniLapili isOver. 
	self assert: terniLapili hasPlayerXWon. 
! !

!methodRemoval: TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVerticalLine stamp: 'G. B. 10/31/2020 21:03:42'!
test13PlayerXWinsIfPlayerXMakesVerticalLine
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 0@1.
	terniLapili putOAt: 2@0.
	terniLapili putXAt: 0@2.

	
	self assert: terniLapili isOver. 
	self assert: terniLapili hasPlayerXWon. 
!
!TerniLapilliTest methodsFor: 'game over tests' stamp: 'G. B. 10/31/2020 21:04:58'!
test13PlayerXWinsIfPlayerXMakesVertical1
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 1@0.
	terniLapili putOAt: 2@1.
	terniLapili putXAt: 1@1.
	terniLapili putOAt: 2@0.
	terniLapili putXAt: 1@2.

	
	self assert: terniLapili isOver. 
	self assert: terniLapili hasPlayerXWon. 
! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 10/31/2020 21:05:32' prior: 50909861!
checkWinner

	 """ver linea vertical """
	| verticalLine0 verticalLine1 |
	verticalLine0 _ Set with: 0@0 with: 0@1 with: 0@2.
	XPositions = verticalLine0 ifTrue: [
		isOver _ true.
		hasPlayerXWon _ true.
		].
	
	
	verticalLine1 _ Set with: 1@0 with: 1@1 with: 1@2.
	XPositions = verticalLine0 ifTrue: [
		isOver _ true.
		hasPlayerXWon _ true.
		].! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 10/31/2020 21:05:48' prior: 50909972!
checkWinner

	 """ver linea vertical """
	| verticalLine0 verticalLine1 |
	verticalLine0 _ Set with: 0@0 with: 0@1 with: 0@2.
	XPositions = verticalLine0 ifTrue: [
		isOver _ true.
		hasPlayerXWon _ true.
		].
	
	
	verticalLine1 _ Set with: 1@0 with: 1@1 with: 1@2.
	XPositions = verticalLine1 ifTrue: [
		isOver _ true.
		hasPlayerXWon _ true.
		].! !

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical1 stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 21:05:56'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical0 stamp: 'G. B. 10/31/2020 21:05:57'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical1 stamp: 'G. B. 10/31/2020 21:05:57'!
PASSED!
!TerniLapilliTest methodsFor: 'game over tests' stamp: 'G. B. 10/31/2020 21:06:26'!
test13PlayerXWinsIfPlayerXMakesVertical2
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 1@0.
	terniLapili putOAt: 2@1.
	terniLapili putXAt: 1@1.
	terniLapili putOAt: 2@0.
	terniLapili putXAt: 1@2.

	
	self assert: terniLapili isOver. 
	self assert: terniLapili hasPlayerXWon. 
! !
!TerniLapilliTest methodsFor: 'game over tests' stamp: 'G. B. 10/31/2020 21:06:53' prior: 50910055!
test13PlayerXWinsIfPlayerXMakesVertical2
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 0@0.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@1.
	terniLapili putXAt: 2@2.

	
	self assert: terniLapili isOver. 
	self assert: terniLapili hasPlayerXWon. 
! !

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical2 stamp: 'G. B. 10/31/2020 21:06:55'!
ERROR!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 10/31/2020 21:07:41' prior: 50909986!
checkWinner

	 """ver linea vertical """
	| verticalLine0 verticalLine1 verticalLine2 |
	verticalLine0 _ Set with: 0@0 with: 0@1 with: 0@2.
	XPositions = verticalLine0 ifTrue: [
		isOver _ true.
		hasPlayerXWon _ true.
		].
	
	
	verticalLine1 _ Set with: 1@0 with: 1@1 with: 1@2.
	XPositions = verticalLine1 ifTrue: [
		isOver _ true.
		hasPlayerXWon _ true.
		].
	
	verticalLine2 _ Set with: 2@0 with: 2@1 with: 2@2.
	XPositions = verticalLine2 ifTrue: [
		isOver _ true.
		hasPlayerXWon _ true.
		].! !

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 21:07:44'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 21:07:44'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 21:07:44'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 21:07:44'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 21:07:44'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 21:07:44'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 21:07:44'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 21:07:45'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 21:07:45'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 21:07:45'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 21:07:45'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 21:07:45'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical0 stamp: 'G. B. 10/31/2020 21:07:45'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical1 stamp: 'G. B. 10/31/2020 21:07:45'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical2 stamp: 'G. B. 10/31/2020 21:07:45'!
PASSED!
!TerniLapilliTest methodsFor: 'positions tests' stamp: 'G. B. 10/31/2020 21:54:12'!
test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.

	
	self 
	should: [ terniLapili putXAt: 1@0.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantUseMoreThan3Positions ].! !

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 21:54:15'!
FAILURE!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 21:55:16' prior: 50909733!
putXAt: aPoint 
	
	currentPlayer = #O ifTrue: [^ self error: self class shouldPlayPlayerOErrorDescription ].
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3Positions].
	
	
	XPositions add: aPoint .
	self checkWinner.
	currentPlayer := #O. ! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 21:55:23' prior: 50910179!
putXAt: aPoint 
	
	currentPlayer = #O ifTrue: [^ self error: self class shouldPlayPlayerOErrorDescription ].
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinner.
	currentPlayer := #O. ! !
!TerniLapili class methodsFor: 'errors' stamp: 'G. B. 10/31/2020 21:56:01'!
playersCantUseMoreThan3PositionsErrorDescription
	
	^ 'Players cant use more than 3 positions!!'! !

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 21:56:12'!
ERROR!
!TerniLapilliTest methodsFor: 'positions tests' stamp: 'G. B. 10/31/2020 21:56:18' prior: 50910158!
test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.

	
	self 
	should: [ terniLapili putXAt: 1@0.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantUseMoreThan3PositionsErrorDescription ].! !

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical0 stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical1 stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical2 stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 21:56:19'!
PASSED!
!TerniLapilliTest methodsFor: 'positions tests' stamp: 'G. B. 10/31/2020 21:56:37'!
test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.

	
	self 
	should: [ terniLapili putXAt: 1@0.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantUseMoreThan3PositionsErrorDescription ].! !
!TerniLapilliTest methodsFor: 'positions tests' stamp: 'G. B. 10/31/2020 21:58:07' prior: 50910307!
test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.
	" TO DO:
	
	hacer un move y despues que el O trate de poner y salte error"
	
	self 
	should: [ terniLapili putXAt: 1@0.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantUseMoreThan3PositionsErrorDescription ].! !
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 10/31/2020 21:58:24'!
test15ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.
	" TO DO:
	
	hacer un move y despues que el O trate de poner y salte error"
	
	self 
	should: [ terniLapili putXAt: 1@0.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantUseMoreThan3PositionsErrorDescription ].! !
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 10/31/2020 22:04:07'!
test15PlayerXCantMoveAPositionBeforeHaving3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	
		
	self 
	should: [terniLapili moveXFrom: 2@0 to: 2@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantUseMoreThan3PositionsErrorDescription ].! !
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 10/31/2020 22:05:57' prior: 50910365!
test15PlayerXCantMoveAPositionBeforeHaving3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	
		
	self 
	should: [terniLapili moveXFrom: 2@0 to: 2@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantMoveAPositionBeforeHaving3PositionsErrorDescription ].! !

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 10/31/2020 22:06:05'!
ERROR!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 10/31/2020 22:06:05'!
ERROR!
!TerniLapili class methodsFor: 'as yet unclassified' stamp: 'G. B. 10/31/2020 22:06:35'!
playersCantMoveAPositionBeforeHaving3PositionsErrorDescription
	self shouldBeImplemented.! !
!TerniLapili class methodsFor: 'as yet unclassified' stamp: 'G. B. 10/31/2020 22:07:06' prior: 50910403!
playersCantMoveAPositionBeforeHaving3PositionsErrorDescription
	^'Players cant move before having 3 positions'.! !
!TerniLapili class methodsFor: 'as yet unclassified' stamp: 'G. B. 10/31/2020 22:07:14' prior: 50910410!
playersCantMoveAPositionBeforeHaving3PositionsErrorDescription
	^'Players cant move a position before having 3 positions'.! !

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 10/31/2020 22:07:18'!
FAILURE!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 10/31/2020 22:07:33'!
FAILURE!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 22:08:10'!
moveXFrom: aPosition to: aNextPostion
! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 22:08:44' prior: 50910432!
moveXFrom: aPosition to: aNextPostion
	^ self error self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription .! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 22:08:49' prior: 50910436!
moveXFrom: aPosition to: aNextPostion
	^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription .! !

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical0 stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical1 stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical2 stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!testRun: #TerniLapilliTest #test15ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:08:51'!
PASSED!

!methodRemoval: TerniLapilliTest #test15ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:09:19'!
test15ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.
	" TO DO:
	
	hacer un move y despues que el O trate de poner y salte error"
	
	self 
	should: [ terniLapili putXAt: 1@0.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantUseMoreThan3PositionsErrorDescription ].!
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 10/31/2020 22:10:11'!
test15PlayerXCanOnlyMoveAPositionToAnotherValidPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	
		
	self 
	should: [terniLapili moveXFrom: 2@0 to: 2@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantMoveAPositionBeforeHaving3PositionsErrorDescription ].! !
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 10/31/2020 22:10:18'!
test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	
		
	self 
	should: [terniLapili moveXFrom: 2@0 to: 2@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantMoveAPositionBeforeHaving3PositionsErrorDescription ].! !

!methodRemoval: TerniLapilliTest #test15PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 10/31/2020 22:10:22'!
test15PlayerXCanOnlyMoveAPositionToAnotherValidPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	
		
	self 
	should: [terniLapili moveXFrom: 2@0 to: 2@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantMoveAPositionBeforeHaving3PositionsErrorDescription ].!
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 10/31/2020 22:12:24' prior: 50910558!
test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.
	
	terniLapili moveXFrom: 0@0 to: 0@1. ! !
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 10/31/2020 22:12:45' prior: 50910590!
test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition
	
	|terniLapili expectedPosition |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.
	
	terniLapili moveXFrom: 0@0 to: 0@1. 
	
	

	expectedPosition := Set with: 1@2. 	
	terniLapili putOAt: 1@2.
	
	
	self assert: expectedPosition equals: terniLapili OPositions  ! !
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 10/31/2020 22:13:19' prior: 50910603!
test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition
	
	|terniLapili expectedPosition |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.
	
	terniLapili moveXFrom: 0@0 to: 0@1. 
	
	expectedPosition := Set with: 2@0 with: 2@1 with: 0@1. 	
	
	
	self assert: expectedPosition equals: terniLapili XPositions  ! !

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 10/31/2020 22:14:02'!
ERROR!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 22:14:36' prior: 50910443!
moveXFrom: aPosition to: aNextPostion

		[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription .]! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 22:15:22' prior: 50910642!
moveXFrom: aPosition to: aNextPostion

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 22:16:11' prior: 50910649!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 22:16:45' prior: 50910657!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].

	XPositions add: aNextPosition.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 22:17:06' prior: 50910672!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].

	XPositions add: aNextPosition.
	XPositions remove: aPosition.! !

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical0 stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical1 stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical2 stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 10/31/2020 22:17:12'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical0 stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical1 stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical2 stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 10/31/2020 22:17:17'!
PASSED!
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 10/31/2020 22:19:48' prior: 50910621!
test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition
	
	|terniLapili expectedPosition |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.
	
	terniLapili moveXFrom: 0@0 to: 0@1. 
	
	expectedPosition := Set with: 2@0 with: 2@1 with: 0@1. 	
	
	self assert: expectedPosition equals: terniLapili XPositions.
	self assert: terniLapili currentPlayer equals: #O.! !

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 10/31/2020 22:19:49'!
FAILURE!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 10/31/2020 22:20:10' prior: 50910688!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].

	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	currentPlayer := #O. ! !

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical0 stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical1 stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical2 stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 10/31/2020 22:20:13'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical0 stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical1 stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical2 stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 10/31/2020 22:23:48'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical0 stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical1 stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test13PlayerXWinsIfPlayerXMakesVertical2 stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 10/31/2020 22:23:55'!
PASSED!

----QUIT----(1 November 2020 00:37:53) CuisUniversity-4383.image priorSource: 18472625!

----STARTUP---- (1 November 2020 17:57:44) as /mnt/6750e462-c385-4872-92cc-c2b6e5c52075/Documents/UBA/1er cuatri 2020/Ingeniería 1/VM CUIS/CuisUniversity-4383.image!


!classRemoval: #TerniLapili stamp: 'G. B. 11/1/2020 17:57:57'!
Object subclass: #TerniLapili
	instanceVariableNames: 'currentPlayer XPositions OPositions hasPlayerXWon isOver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilliTest stamp: 'G. B. 11/1/2020 17:57:58'!
TestCase subclass: #TerniLapilliTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

----End fileIn of /home/guille/Desktop/Ingeniería 1/isw1-ejercicios/17-TerniLapilli/TerniLapilli.st----!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 17:58:16'!
PASSED!
!TerniLaPiliPlayingO methodsFor: 'nil' stamp: 'G. B. 11/1/2020 18:00:05'!
isPlayingO
	^true.! !
!TerniLaPiliPlayingX methodsFor: 'nil' stamp: 'G. B. 11/1/2020 18:00:27'!
isPlayingO
	^ self error: self class shouldPlayPlayerOErrorDescription.! !

!classDefinition: #TerniLapili category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 18:01:48'!
Object subclass: #TerniLapili
	instanceVariableNames: 'currentPlayer XPositions OPositions state'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:01:46' prior: 50911778!
putXAt: aPoint 
	
	self isPlayingO ifTrue: [^ self error: self class shouldPlayPlayerOErrorDescription ].
	
	state isPlayingO.
	
	
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinnerX.
	currentPlayer := #O. ! !
!TerniLapili methodsFor: 'initialization' stamp: 'G. B. 11/1/2020 18:02:20' prior: 50911797 overrides: 16896425!
initialize
	
	currentPlayer := #X. 
	XPositions := Set new.
	OPositions := Set new.
	state _ TerniLaPiliPlayingX new.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:03:12' prior: 50911990!
putXAt: aPoint 
	
"""	self isPlayingO ifTrue: [^ self error: self class shouldPlayPlayerOErrorDescription ]."""
	
	state isPlayingO.
	
	
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinnerX.
	currentPlayer := #O. ! !

!classDefinition: #TerniLapili category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 18:04:07'!
Object subclass: #TerniLapili
	instanceVariableNames: 'currentPlayer XPositions OPositions state currentState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapili methodsFor: 'initialization' stamp: 'G. B. 11/1/2020 18:04:04' prior: 50912010 overrides: 16896425!
initialize
	
"""	currentPlayer := #X. """
	XPositions := Set new.
	OPositions := Set new.
	currentState _ TerniLaPiliPlayingX new.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:05:31' prior: 50912017!
putXAt: aPoint 
	
"""	self isPlayingO ifTrue: [^ self error: self class shouldPlayPlayerOErrorDescription ]."""
	
	currentState canPlayX.
	
	
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinnerX.
	currentPlayer := #O. ! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:06:02' prior: 50911760!
putOAt: aPoint 
	
"""	self isPlayingX ifTrue: [^ self error: self class shouldPlayPlayerXErrorDescription ]."""
	currentState canPlayO.


	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinnerO.
	currentPlayer := #X. ! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:06:29' prior: 50911729!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ].
	"""self isPlayingO ifTrue: [^ self error: self class shouldPlayPlayerOErrorDescription ]."""
	currentState canPlayX.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	currentPlayer := #O. ! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:06:49' prior: 50911698!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ].
	
	"""self isPlayingX ifTrue: [^ self error: self class shouldPlayPlayerXErrorDescription ]."""
	
	currentState canPlayO.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	currentPlayer := #X. ! !

Object subclass: #TerniLapili
	instanceVariableNames: 'XPositions OPositions currentState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapili category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 18:07:01'!
Object subclass: #TerniLapili
	instanceVariableNames: 'XPositions OPositions currentState'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:07:05'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:07:05'!
FAILURE!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:07:05'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:07:05'!
FAILURE!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:07:05'!
ERROR!
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:07:30'!
canPlayO
	^true.! !

!methodRemoval: TerniLaPiliPlayingO #isPlayingO stamp: 'G. B. 11/1/2020 18:07:30'!
isPlayingO
	^true.!
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:07:49'!
canPlayO
	^ self error: self class shouldPlayPlayerOErrorDescription.! !

!methodRemoval: TerniLaPiliPlayingX #isPlayingO stamp: 'G. B. 11/1/2020 18:07:49'!
isPlayingO
	^ self error: self class shouldPlayPlayerOErrorDescription.!
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:08:15'!
canPlayX
	^ true.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:08:28'!
canPlayX
	^self error: self class shouldPlayPlayerOErrorDescription.! !
!TerniLapili methodsFor: 'initialization' stamp: 'G. B. 11/1/2020 18:08:46' prior: 50912046 overrides: 16896425!
initialize
	
	XPositions := Set new.
	OPositions := Set new.
	currentState _ TerniLaPiliPlayingX new.! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/1/2020 18:09:19' prior: 50911603!
currentPlayer

	^currentState player.
	
	"hacer refactor de currentPlayer a nextPlayer"! !
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:09:29'!
player
	^ #X.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:09:39'!
player
	^#O.! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/1/2020 18:10:06' prior: 50911632!
isPlayingX
	
	^ self currentPlayer = #X! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:10:48' prior: 50912124!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ].
	
	"""self isPlayingX ifTrue: [^ self error: self class shouldPlayPlayerXErrorDescription ]."""
	
	currentState canPlayO.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	currentState _ TerniLaPiliPlayingX new.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:11:06' prior: 50912092!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ].
	"""self isPlayingO ifTrue: [^ self error: self class shouldPlayPlayerOErrorDescription ]."""
	currentState canPlayX.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	currentState _ TerniLaPiliPlayingO new.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:11:24' prior: 50912073!
putOAt: aPoint 
	
"""	self isPlayingX ifTrue: [^ self error: self class shouldPlayPlayerXErrorDescription ]."""
	currentState canPlayO.


	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinnerO.

	currentState _ TerniLaPiliPlayingX new.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:11:37' prior: 50912053!
putXAt: aPoint 
	
"""	self isPlayingO ifTrue: [^ self error: self class shouldPlayPlayerOErrorDescription ]."""
	
	currentState canPlayX.
	
	
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinnerX.


	currentState _ TerniLaPiliPlayingO new.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:11:40'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:11:40'!
FAILURE!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:11:40'!
FAILURE!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:11:40'!
FAILURE!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:11:40'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:11:52'!
FAILURE!
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:12:13' prior: 50912285!
canPlayO
	^ self error: TerniLapili class shouldPlayPlayerOErrorDescription.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:12:24' prior: 50912299!
canPlayX
	^self error: TerniLapili class shouldPlayPlayerOErrorDescription.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:12:26'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:12:26'!
FAILURE!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:12:26'!
FAILURE!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:12:26'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:12:27'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:12:27'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:12:27'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:12:27'!
FAILURE!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:12:27'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:12:27'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:12:32'!
FAILURE!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:13:09'!
FAILURE!
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:14:05' prior: 50912556!
canPlayX
	^self error: TerniLapili class shouldPlayPlayerXErrorDescription.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:14:07'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:14:07'!
FAILURE!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:14:07'!
FAILURE!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:14:07'!
FAILURE!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:14:07'!
PASSED!
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:14:35' prior: 50912550!
canPlayO
	^ self error: TerniLapili class shouldPlayPlayerXErrorDescription.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:14:38'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:14:38'!
FAILURE!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:14:38'!
FAILURE!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:14:38'!
FAILURE!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:14:38'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:14:42'!
FAILURE!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:14:54'!
FAILURE!
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:15:28' prior: 50912795!
canPlayO
	^ self error: TerniLapili shouldPlayPlayerXErrorDescription.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:15:53' prior: 50912679!
canPlayX
	^self error: TerniLapili shouldPlayPlayerOErrorDescription.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:15:55'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:15:56'!
PASSED!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:16:25' prior: 50912396!
putOAt: aPoint 
	
	currentState canPlayO.


	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinnerO.

	currentState _ TerniLaPiliPlayingX new.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:16:31' prior: 50912416!
putXAt: aPoint 
		
	currentState canPlayX.
	
	
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinnerX.


	currentState _ TerniLaPiliPlayingO new.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:16:38' prior: 50912363!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ].

	currentState canPlayX.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	currentState _ TerniLaPiliPlayingO new.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:16:43' prior: 50912330!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ].
	
	
	currentState canPlayO.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	currentState _ TerniLaPiliPlayingX new.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:17:06' prior: 50913056!
putXAt: aPoint 
		
	currentState canPlayX.
	
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinnerX.


	currentState _ TerniLaPiliPlayingO new.! !

Object subclass: #TerniLaPiliGameOver
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLaPiliGameOver category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 18:17:58'!
Object subclass: #TerniLaPiliGameOver
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:18:34' prior: 50913103!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	
	
	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ].
	
	currentState canPlayO.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	currentState _ TerniLaPiliPlayingX new.! !
!TerniLaPiliGameOver methodsFor: 'nil' stamp: 'G. B. 11/1/2020 18:18:46'!
isOver
	^true.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:18:54'!
isOver
	^false.! !
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:19:03'!
isOver
	^false.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:19:24' prior: 50913162!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	
	
	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ].
	currentState isOver.
	currentState canPlayO.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	currentState _ TerniLaPiliPlayingX new.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:20:53' prior: 50913204!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	
	
	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ].
	currentState canPlay.
	currentState canPlayO.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	currentState _ TerniLaPiliPlayingX new.! !
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:23:08' prior: 50913192!
isOver
	^true.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:27:29' prior: 50913235!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	
	
	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ].
	currentState checkGameOver.
	currentState canPlayO.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	currentState _ TerniLaPiliPlayingX new.! !
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:27:54'!
checkGameOver
	^true.! !

!methodRemoval: TerniLaPiliGameOver #isOver stamp: 'G. B. 11/1/2020 18:27:54'!
isOver
	^true.!
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:28:06' prior: 50913301!
checkGameOver
	^ self error: TerniLapili theGameIsOverErrorDescription.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:28:44'!
checkGameOver
	^false.! !

!methodRemoval: TerniLaPiliPlayingO #isOver stamp: 'G. B. 11/1/2020 18:28:44'!
isOver
	^false.!
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:28:58' prior: 50913315!
checkGameOver
	! !
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:29:12'!
checkGameOver
	^false.! !

!methodRemoval: TerniLaPiliPlayingX #isOver stamp: 'G. B. 11/1/2020 18:29:12'!
isOver
	^false.!
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:29:15' prior: 50913327!
checkGameOver
! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:29:16'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:29:17'!
PASSED!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:29:45' prior: 50913073!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ].

	currentState checkGameOver .
	currentState canPlayX.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	currentState _ TerniLaPiliPlayingO new.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:29:49' prior: 50913448!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
"""	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ]."""

	currentState checkGameOver .
	currentState canPlayX.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	currentState _ TerniLaPiliPlayingO new.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:29:58' prior: 50913270!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	
	
	"""(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ]."""
	currentState checkGameOver.
	currentState canPlayO.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	currentState _ TerniLaPiliPlayingX new.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:29:59'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:30:00'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:30:00'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:30:00'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:30:00'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:30:00'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:30:00'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:30:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:30:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:30:00'!
FAILURE!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:30:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:30:00'!
FAILURE!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:30:37'!
FAILURE!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:30:50'!
FAILURE!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:31:34'!
FAILURE!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:31:34'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:31:34'!
FAILURE!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 18:33:53' prior: 50911664!
checkWinnerX

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 1@2.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .
	
	(winningPositions includes: XPositions) ifTrue: 
	[currentState _ TerniLaPiliGameOver .
	^true].

	^false.
	

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 18:34:14' prior: 50911643!
checkWinnerO

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 1@2.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	
	(winningPositions includes: OPositions) ifTrue: 
		[currentState _ TerniLaPiliGameOver .
		^true].

	^false.	
! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:34:15'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:34:16'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:34:16'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:34:16'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:34:16'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:34:16'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:34:16'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:34:16'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:34:16'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:34:16'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:34:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:34:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:34:16'!
FAILURE!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:34:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:34:16'!
FAILURE!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 18:34:27' prior: 50913803!
checkWinnerO

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 1@2.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	
	(winningPositions includes: OPositions) ifTrue: 
		[currentState _ TerniLaPiliGameOver new .
		^true].

	^false.	
! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 18:34:35' prior: 50913774!
checkWinnerX

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 1@2.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .
	
	(winningPositions includes: XPositions) ifTrue: 
	[currentState _ TerniLaPiliGameOver new.
	^true].

	^false.
	

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:34:37'!
FAILURE!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:34:37'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:34:37'!
FAILURE!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 18:36:55' prior: 50913962!
checkWinnerX

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 1@2.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .
	
	(winningPositions includes: XPositions) ifTrue: 
	[currentState _ TerniLaPiliGameOver new.].

	^currentState _ TerniLaPiliPlayingO new.
	

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 18:37:07' prior: 50913939!
checkWinnerO

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 1@2.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	
	(winningPositions includes: OPositions) ifTrue: 
		[currentState _ TerniLaPiliGameOver new .
		^true].

	^false.	
! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 18:37:27' prior: 50914104!
checkWinnerX

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 1@2.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .
	
	(winningPositions includes: XPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new.] ifFalse: [	^currentState _ TerniLaPiliPlayingO new.].
	

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 18:37:51' prior: 50914134!
checkWinnerO

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 1@2.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	
	(winningPositions includes: OPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new.] ifFalse: [	^currentState _ TerniLaPiliPlayingX new.].

! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:37:59' prior: 50913039!
putOAt: aPoint 
	
	currentState canPlayO.


	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinnerO.

! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:38:05' prior: 50913133!
putXAt: aPoint 
		
	currentState canPlayX.
	
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinnerX.


! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:38:52' prior: 50913479!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
"""	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ]."""

	currentState checkGameOver .
	currentState canPlayX.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	self checkWinnerX.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:39:07' prior: 50913510!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	
	
	"""(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ]."""
	currentState checkGameOver.
	currentState canPlayO.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	self checkWinnerO.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:39:14'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:39:14'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:39:14'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:39:14'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:39:14'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:39:14'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:39:14'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:39:14'!
ERROR!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:39:14'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:39:22'!
ERROR!
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/1/2020 18:41:00' prior: 50911623!
isOver

	^ currentState isOver.! !
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:41:12'!
isOver
	^ true.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:41:22'!
isOver
	^true.
	! !
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:41:32'!
isOver
	^false.
! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:41:38' prior: 50914425!
isOver
	^false.
	! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:41:43'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:41:43'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:41:43'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:41:43'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:41:44'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:41:44'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:41:44'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:41:44'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:41:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:41:44'!
ERROR!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:41:44'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:41:50'!
ERROR!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 18:43:21' prior: 50914188!
checkWinnerO

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 1@2.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	
	(winningPositions includes: OPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] ifFalse: [	currentState _ TerniLaPiliPlayingX new. ^false.].

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 18:44:06' prior: 50914157!
checkWinnerX

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 1@2.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .
	
	(winningPositions includes: XPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true] ifFalse: [	currentState _ TerniLaPiliPlayingO new. ^false]
	

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 18:44:10' prior: 50914574!
checkWinnerX

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 1@2.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .
	
	(winningPositions includes: XPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true] ifFalse: [	currentState _ TerniLaPiliPlayingO new. ^false].
	

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:44:24'!
ERROR!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:44:24'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:44:24'!
ERROR!
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:44:49'!
canPlayO
	^false.! !
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:44:53'!
canPlayX
	^false.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:45:06'!
FAILURE!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:45:06'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:45:06'!
FAILURE!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:47:09'!
FAILURE!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:47:09'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:47:09'!
FAILURE!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:48:03'!
FAILURE!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:48:03'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:48:03'!
FAILURE!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:48:46' prior: 50914212!
putOAt: aPoint 

	currentState checkGameOver.
	currentState canPlayO.


	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinnerO.

! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:49:05' prior: 50914228!
putXAt: aPoint 
	
	currentState checkGameOver .
	currentState canPlayX.
	
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinnerX.


! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:49:07'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:49:08'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:49:08'!
ERROR!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:49:08'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:49:08'!
ERROR!
!TerniLapilliTest methodsFor: 'game over tests' stamp: 'G. B. 11/1/2020 18:49:33' prior: 50911303!
testxxWhenTheGameIsOverNoOneCanMove
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 1@1.
	terniLapili putOAt: 1@0.
	terniLapili putXAt: 2@2.
	
	
	self 
	should: [terniLapili putOAt: 0@2.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili theGameIsOverErrorDescription].! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:49:45'!
PASSED!
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:51:01' prior: 50914753!
canPlayX
	^ self error: TerniLapili theGameIsOverErrorDescription.! !
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 18:51:08' prior: 50914749!
canPlayO
	^ self error: TerniLapili theGameIsOverErrorDescription.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:51:56' prior: 50915112!
putXAt: aPoint 
	
	currentState canPlayX.
	
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinnerX.


! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:52:03' prior: 50915095!
putOAt: aPoint 

	currentState canPlayO.


	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinnerO.

! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:52:09' prior: 50914244!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
"""	(self isOver ) ifTrue: [^ self error: self class theGameIsOverErrorDescription ]."""

	currentState canPlayX.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	self checkWinnerX.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:52:17' prior: 50914274!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	
	currentState canPlayO.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	self checkWinnerO.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:52:19'!
PASSED!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 18:53:12' prior: 50915411!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].

	currentState canPlayX.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	self checkWinnerX.! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/1/2020 18:53:27' prior: 50912312!
currentPlayer

	^currentState player.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 18:57:27'!
PASSED!
!TerniLapilliTest methodsFor: 'order of Players' stamp: 'G. B. 11/1/2020 18:57:58'!
test02shouldRaiseErrorIfPlayerOstartsTheGame
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	self 
	should: [ terniLapili putOAt: 0@0.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili shouldPlayPlayerXErrorDescription. ].
! !

!methodRemoval: TerniLapilliTest #test02shouldRaiseErrorIfPlayer0startsTheGame stamp: 'G. B. 11/1/2020 18:57:58'!
test02shouldRaiseErrorIfPlayer0startsTheGame
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	self 
	should: [ terniLapili putOAt: 0@0.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili shouldPlayPlayerXErrorDescription. ].
!
!TerniLapilliTest methodsFor: 'board limits tests' stamp: 'G. B. 11/1/2020 19:05:16'!
testxxshouldRaiseErrorIfPlayerXGoesBelowFloor
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	self 
	should: [ terniLapili putXAt: 1@-2]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 19:05:33'!
PASSED!
!TerniLapilliTest methodsFor: 'board limits tests' stamp: 'G. B. 11/1/2020 19:06:19'!
testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	self 
	should: [ terniLapili putXAt: 1@-2]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !
!TerniLapilliTest methodsFor: 'board limits tests' stamp: 'G. B. 11/1/2020 19:06:33' prior: 50915871!
testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	self 
	should: [ terniLapili putXAt: 1@3]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 19:06:34'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 19:06:35'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 19:06:35'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 19:06:35'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 19:06:35'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 19:06:35'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 19:06:35'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 19:06:35'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 19:06:35'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 19:06:35'!
PASSED!
!TerniLapilliTest methodsFor: 'board limits tests' stamp: 'G. B. 11/1/2020 19:07:32'!
testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	self 
	should: [ terniLapili putXAt: 1@3]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !
!TerniLapilliTest methodsFor: 'board limits tests' stamp: 'G. B. 11/1/2020 19:07:44' prior: 50916015!
testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	self 
	should: [ terniLapili putXAt: -1@1]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 19:07:47'!
PASSED!
!TerniLapilliTest methodsFor: 'board limits tests' stamp: 'G. B. 11/1/2020 19:08:11'!
testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	self 
	should: [ terniLapili putXAt: 3@1]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 19:08:12'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 19:08:13'!
PASSED!
!TerniLapilliTest methodsFor: 'board limits tests' stamp: 'G. B. 11/1/2020 19:08:30'!
testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	self 
	should: [ terniLapili putXAt: 3@1]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 19:08:31'!
PASSED!

!methodRemoval: TerniLapilliTest #test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition stamp: 'G. B. 11/1/2020 19:08:59'!
test08shouldRaiseErrorIfPlayerXPutAnInvalidPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	self 
	should: [ terniLapili putXAt: 0@3]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].!
!TerniLapilliTest methodsFor: 'board limits tests' stamp: 'G. B. 11/1/2020 19:09:42' prior: 50916303!
testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit
	
	|terniLapili |

	terniLapili := TerniLapili new.
	terniLapili putXAt: 0@1.

	
	self 
	should: [ terniLapili putXAt: 3@1]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 19:09:43'!
FAILURE!
!TerniLapilliTest methodsFor: 'board limits tests' stamp: 'G. B. 11/1/2020 19:09:58' prior: 50916461!
testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit
	
	|terniLapili |

	terniLapili := TerniLapili new.
	terniLapili putXAt: 0@1.

	
	self 
	should: [ terniLapili putOAt: 3@1]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].! !

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 19:09:59'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 19:10:00'!
PASSED!

!methodRemoval: TerniLapilliTest #test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition stamp: 'G. B. 11/1/2020 19:10:17'!
test10shouldRaiseErrorIfPlayerOPutsAnInvalidPosition
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@1.
	
	self 
	should: [ terniLapili putOAt: 3@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersShouldChooseAValidPosition ].!
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 11/1/2020 19:17:30'!
test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard
	
	|terniLapili expectedPosition |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.
	
	terniLapili moveXFrom: 0@0 to: 0@1. 
	
	expectedPosition := Set with: 2@0 with: 2@1 with: 0@1. 	
	
	self assert: expectedPosition equals: terniLapili XPositions.
	self assert: terniLapili isPlayingO! !

!methodRemoval: TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition stamp: 'G. B. 11/1/2020 19:17:30'!
test16PlayerXCanOnlyMoveAPositionToAnotherValidPosition
	
	|terniLapili expectedPosition |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.
	
	terniLapili moveXFrom: 0@0 to: 0@1. 
	
	expectedPosition := Set with: 2@0 with: 2@1 with: 0@1. 	
	
	self assert: expectedPosition equals: terniLapili XPositions.
	self assert: terniLapili isPlayingO!
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 11/1/2020 20:05:06'!
test16shouldRaiseErrorIfAPlayerTriesToMoveAPositionBeforeHaving3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.
	
	self 
	should: [terniLapili moveXFrom: 1@2 to: 2@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantMoveAPositionThatIsNotHis ].
	
! !
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 11/1/2020 20:06:06' prior: 50916671!
test16shouldRaiseErrorIfAPlayerTriesToMoveAPositionBeforeHaving3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	
	self 
	should: [terniLapili moveXFrom: 0@0 to: 2@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili player ].
	
! !

!methodRemoval: TerniLapilliTest #test16shouldRaiseErrorIfAPlayerTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:06:46'!
test16shouldRaiseErrorIfAPlayerTriesToMoveAPositionBeforeHaving3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	
	self 
	should: [terniLapili moveXFrom: 0@0 to: 2@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili player ].
	
!
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 11/1/2020 20:07:11'!
test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	
		
	self 
	should: [terniLapili moveXFrom: 2@0 to: 2@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantMoveAPositionBeforeHaving3PositionsErrorDescription ].! !

!methodRemoval: TerniLapilliTest #test15PlayerXCantMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:07:11'!
test15PlayerXCantMoveAPositionBeforeHaving3Positions
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	
		
	self 
	should: [terniLapili moveXFrom: 2@0 to: 2@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantMoveAPositionBeforeHaving3PositionsErrorDescription ].!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 20:07:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 20:07:17'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 20:07:17'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 20:07:17'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 20:07:17'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 20:07:17'!
PASSED!
!TerniLapilliTest methodsFor: 'game over tests' stamp: 'G. B. 11/1/2020 20:08:06'!
test24PlayerXWinsIfHeMakesHorizontal1
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 1@0.
	terniLapili putOAt: 0@2.
	terniLapili putXAt: 2@0.

	
	self assert: terniLapili isOver. 
	self assert: terniLapili hasPlayerXWon. 
! !
!TerniLapilliTest methodsFor: 'game over tests' stamp: 'G. B. 11/1/2020 20:08:27' prior: 50916872!
test24PlayerXWinsIfHeMakesHorizontal1
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@1.
	terniLapili putOAt: 2@2.
	terniLapili putXAt: 1@1.
	terniLapili putOAt: 0@2.
	terniLapili putXAt: 2@1.

	
	self assert: terniLapili isOver. 
	self assert: terniLapili hasPlayerXWon. 
! !

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 20:08:28'!
FAILURE!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 20:09:12' prior: 50914605!
checkWinnerX

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .
	
	(winningPositions includes: XPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true] ifFalse: [	currentState _ TerniLaPiliPlayingO new. ^false].
	

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 20:09:18' prior: 50914549!
checkWinnerO

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	
	(winningPositions includes: OPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] ifFalse: [	currentState _ TerniLaPiliPlayingX new. ^false.].

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 20:09:21'!
PASSED!
!TerniLapilliTest methodsFor: 'game over tests' stamp: 'G. B. 11/1/2020 20:09:30'!
test24PlayerXWinsIfHeMakesHorizontal2
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@1.
	terniLapili putOAt: 2@2.
	terniLapili putXAt: 1@1.
	terniLapili putOAt: 0@2.
	terniLapili putXAt: 2@1.

	
	self assert: terniLapili isOver. 
	self assert: terniLapili hasPlayerXWon. 
! !
!TerniLapilliTest methodsFor: 'game over tests' stamp: 'G. B. 11/1/2020 20:09:49' prior: 50917082!
test24PlayerXWinsIfHeMakesHorizontal2
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@2.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 1@2.
	terniLapili putOAt: 0@2.
	terniLapili putXAt: 2@2.

	
	self assert: terniLapili isOver. 
	self assert: terniLapili hasPlayerXWon. 
! !

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 20:09:50'!
ERROR!
!TerniLapilliTest methodsFor: 'game over tests' stamp: 'G. B. 11/1/2020 20:10:02' prior: 50917095!
test24PlayerXWinsIfHeMakesHorizontal2
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@2.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 1@2.
	terniLapili putOAt: 0@1.
	terniLapili putXAt: 2@2.

	
	self assert: terniLapili isOver. 
	self assert: terniLapili hasPlayerXWon. 
! !

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 20:10:02'!
PASSED!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 20:10:02'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 20:10:03'!
PASSED!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:13:34' prior: 50915441!
moveOFrom: aPosition to: aNextPosition

	"""OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription]."""
	currentState isMovingO.
	
	currentState canPlayO.
	
	
	(self isValidPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isEmptyPosition: aNextPosition) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	self checkWinnerO.! !

Object subclass: #TerniLaPiliMovingX
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLaPiliMovingX category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 20:14:05'!
Object subclass: #TerniLaPiliMovingX
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

Object subclass: #TerniLaPiliMovingO
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLaPiliMovingO category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 20:16:14'!
Object subclass: #TerniLaPiliMovingO
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!
!TerniLaPiliMovingO methodsFor: 'no messages' stamp: 'G. B. 11/1/2020 20:16:33'!
isMovingO
	^true.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 20:17:27'!
isMovingO! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 20:18:11' prior: 50917313!
isMovingO
	^self error: TerniLapili  playersCantMoveAPositionBeforeHaving3PositionsErrorDescription! !
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 20:18:51'!
isMovingO
	^self error: TerniLapili shouldPlayPlayerXErrorDescription.! !
!TerniLaPiliMovingX methodsFor: 'nil' stamp: 'G. B. 11/1/2020 20:19:09'!
isMovingO
	^self error: TerniLapili shouldPlayPlayerXErrorDescription.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:19:12'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 20:19:12'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:19:12'!
ERROR!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 20:21:51' prior: 50916932!
checkWinnerO

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	
	(OPositions size = 3) ifTrue: [currentState _ TerniLaPiliMovingO .].
	(winningPositions includes: OPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] ifFalse: [	currentState _ TerniLaPiliPlayingX new. ^false.].

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 20:22:26' prior: 50917466!
checkWinnerO

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	

	(winningPositions includes: OPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] ifFalse: [	currentState _ TerniLaPiliPlayingX new. ^false.].

! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:32:51' prior: 50915395!
putOAt: aPoint 

	currentState canPlayO.

	self isValidPosition: aPoint.
	(self isValidPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAValidPosition ].
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	
	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinnerO.

! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:32:58' prior: 50917518!
putOAt: aPoint 

	currentState canPlayO.

	self isValidPosition: aPoint.

	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinnerO.

! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/1/2020 20:34:04' prior: 50911636!
isValidPosition: aPoint
	
	
	(self isEmptyPosition: aPoint) ifFalse:[^ self error: self class playersShouldChooseAnEmptyPosition].
	
	
	(aPoint x  > 2 or: aPoint y  > 2) ifTrue: [^ self error: self class playersShouldChooseAValidPosition].
	(aPoint x  < 0 or: aPoint y  < 0) ifTrue: [^ self error: self class playersShouldChooseAValidPosition].
! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/1/2020 20:34:35' prior: 50917546!
isValidPosition: aPoint
	

	(aPoint x  > 2 or: aPoint y  > 2) ifTrue: [^ self error: self class playersShouldChooseAValidPosition].
	(aPoint x  < 0 or: aPoint y  < 0) ifTrue: [^ self error: self class playersShouldChooseAValidPosition].
	
	((XPositions includes: aPoint 	) or: (OPositions includes: aPoint)) ifTrue: [^ self error: self class playersShouldChooseAnEmptyPosition].
! !

!methodRemoval: TerniLapili #isEmptyPosition: stamp: 'G. B. 11/1/2020 20:35:07'!
isEmptyPosition: aPoint
	
	((XPositions includes: aPoint 	) or: (OPositions includes: aPoint)) ifTrue: [^ false].
	
	^ true!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:35:32' prior: 50915379!
putXAt: aPoint 
	
	currentState canPlayX.

	self isValidPosition: aPoint.


	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinnerX.


! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:36:03' prior: 50915577!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].

	currentState canPlayX.
	
	
	self isValidPosition: aNextPosition.

	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	self checkWinnerX.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:36:25' prior: 50917257!
moveOFrom: aPosition to: aNextPosition

	"""OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription]."""
	currentState isMovingO.
	
	currentState canPlayO.
	
	
	self isValidPosition: aNextPosition.

	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	self checkWinnerO.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:36:27'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:36:28'!
FAILURE!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:36:28'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 20:36:28'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:36:34'!
ERROR!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:37:16'!
FAILURE!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:37:16'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 20:37:16'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:37:22'!
FAILURE!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:38:25'!
FAILURE!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:39:27' prior: 50917593!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].

	currentState canPlayX.
	
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	self isValidPosition: aNextPosition.


	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	self checkWinnerX.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:39:42' prior: 50917614!
moveOFrom: aPosition to: aNextPosition

	"""OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription]."""
	currentState isMovingO.
	
	currentState canPlayO.
	
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	self isValidPosition: aNextPosition.

	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	self checkWinnerO.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:39:44'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 20:39:44'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:39:44'!
ERROR!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:45:01' prior: 50917926!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	"""currentState isMovingO."""
	
	currentState canPlayO.
	
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	self isValidPosition: aNextPosition.

	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	self checkWinnerO.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 20:45:11'!
PASSED!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:46:59' prior: 50917535!
putOAt: aPoint 

	self isValidPosition: aPoint.

	currentState putOAt: aPoint.

"	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinnerO.
"
! !
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 20:47:50'!
putOAt: aPoint.
	game PlayingOPutOAt: aPoint.! !
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 20:47:58' prior: 50918242!
putOAt: aPoint.
	^game PlayingOPutOAt: aPoint.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:48:32'!
PlayingOPutOAt: aPoint
	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinnerO.

! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:49:31' prior: 50918251!
PlayingOPutOAt: aPoint
	
"	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription]."

	OPositions add: aPoint.
	self checkWinnerO.

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 20:49:32'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 20:49:32'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 20:49:32'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 20:49:32'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 20:49:32'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 20:49:32'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 20:49:32'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 20:49:32'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 20:49:32'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 20:49:32'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 20:49:32'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 20:49:32'!
ERROR!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 20:58:43'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 20:58:43'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 20:58:43'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 20:58:43'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 20:58:43'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 20:58:43'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 20:58:43'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 20:58:43'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 20:58:43'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 20:58:43'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 20:58:43'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 20:58:43'!
ERROR!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:59:11' prior: 50918260!
PlayingOPutOAt: aPoint
	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinnerO.

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 20:59:16'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 20:59:16'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 20:59:16'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 20:59:16'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 20:59:16'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 20:59:16'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 20:59:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 20:59:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 20:59:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 20:59:16'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 20:59:16'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 20:59:16'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:59:24'!
ERROR!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 20:59:51' prior: 50918525!
PlayingOPutOAt: aPoint
	
	"(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription]."

	OPositions add: aPoint.
	self checkWinnerO.

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 20:59:54'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 20:59:54'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 20:59:54'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 20:59:54'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 20:59:54'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 20:59:54'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 20:59:54'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 20:59:54'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 20:59:54'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 20:59:54'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 20:59:54'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 20:59:54'!
ERROR!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 21:00:07' prior: 50918665!
PlayingOPutOAt: aPoint
	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinnerO.

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:00:12'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 21:00:12'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:00:12'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 21:00:12'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 21:00:12'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 21:00:12'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 21:00:12'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 21:00:12'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 21:00:12'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 21:00:12'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 21:00:12'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 21:00:12'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:00:14'!
ERROR!
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 21:00:44' prior: 50918247!
putOAt: aPoint.
	! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 21:00:49'!
putOAt: aPoint.
	^game PlayingOPutOAt: aPoint.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:00:50'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 21:00:50'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:00:50'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 21:00:50'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 21:00:50'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 21:00:50'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 21:00:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 21:00:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 21:00:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 21:00:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 21:00:50'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 21:00:50'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:00:52'!
ERROR!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:01:09'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 21:01:09'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:01:09'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 21:01:09'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 21:01:09'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 21:01:09'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 21:01:09'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 21:01:09'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 21:01:09'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 21:01:09'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 21:01:09'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 21:01:09'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:01:12'!
ERROR!
!TerniLapili methodsFor: 'initialization' stamp: 'G. B. 11/1/2020 21:01:39' prior: 50912305 overrides: 16896425!
initialize
	
	XPositions := Set new.
	OPositions := Set new.
	currentState _ TerniLaPiliPlayingX new with: self.! !
!TerniLaPiliPlayingX methodsFor: 'nil' stamp: 'G. B. 11/1/2020 21:02:35'!
initializeWith: aGame
	game _ aGame.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 21:02:45'!
initializeWith: aGame
	game _ aGame.! !
!TerniLaPiliMovingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 21:02:51'!
initializeWith: aGame
	game _ aGame.! !
!TerniLaPiliMovingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 21:02:55'!
initializeWith: aGame
	game _ aGame.! !
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 21:02:58'!
initializeWith: aGame
	game _ aGame.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 21:03:00'!
ERROR!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:03:05'!
ERROR!
!TerniLapili methodsFor: 'initialization' stamp: 'G. B. 11/1/2020 21:03:21' prior: 50919215 overrides: 16896425!
initialize
	
	XPositions := Set new.
	OPositions := Set new.
	currentState _ TerniLaPiliPlayingX with: self.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 21:03:23'!
ERROR!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:03:25'!
ERROR!
!TerniLaPiliPlayingX class methodsFor: 'no messages' stamp: 'G. B. 11/1/2020 21:03:48'!
with: aGame
	^self new initializeWith: aGame.! !
!TerniLaPiliPlayingO class methodsFor: 'nil' stamp: 'G. B. 11/1/2020 21:03:55'!
with: aGame
	^self new initializeWith: aGame.! !
!TerniLaPiliMovingX class methodsFor: 'nil' stamp: 'G. B. 11/1/2020 21:03:59'!
with: aGame
	^self new initializeWith: aGame.! !
!TerniLaPiliMovingO class methodsFor: 'nil' stamp: 'G. B. 11/1/2020 21:04:04'!
with: aGame
	^self new initializeWith: aGame.! !
!TerniLaPiliGameOver class methodsFor: 'nil' stamp: 'G. B. 11/1/2020 21:04:12'!
with: aGame
	^self new initializeWith: aGame.! !

Object subclass: #TerniLapilliState
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapilliState category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 21:04:33'!
Object subclass: #TerniLapilliState
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #TerniLaPiliPlayingX
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapilliState subclass: #TerniLaPiliPlayingX
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLapiliState category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 21:06:48'!
Object subclass: #TerniLapiliState
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLaPiliPlayingX category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 21:06:48'!
TerniLapiliState subclass: #TerniLaPiliPlayingX
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapiliState subclass: #TerniLaPiliPlayingO
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLaPiliPlayingO category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 21:08:05'!
TerniLapiliState subclass: #TerniLaPiliPlayingO
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapiliState subclass: #TerniLaPiliMovingX
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLaPiliMovingX category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 21:08:13'!
TerniLapiliState subclass: #TerniLaPiliMovingX
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapiliState subclass: #TerniLaPiliMovingO
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLaPiliMovingO category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 21:08:24'!
TerniLapiliState subclass: #TerniLaPiliMovingO
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

TerniLapiliState subclass: #TerniLaPiliGameOver
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classDefinition: #TerniLaPiliGameOver category: 'TerniLapilli' stamp: 'G. B. 11/1/2020 21:08:31'!
TerniLapiliState subclass: #TerniLaPiliGameOver
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!classRemoval: #TerniLapilliState stamp: 'G. B. 11/1/2020 21:08:45'!
Object subclass: #TerniLapilliState
	instanceVariableNames: 'game'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TerniLapilli'!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:09:40'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 21:09:40'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:09:40'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 21:09:40'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 21:09:40'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 21:09:40'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 21:09:40'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 21:09:40'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 21:09:40'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 21:09:40'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 21:09:40'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 21:09:40'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:09:43'!
ERROR!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 21:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:10:32'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 21:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 21:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 21:10:32'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 21:10:32'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 21:10:32'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 21:10:32'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 21:10:32'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 21:10:32'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 21:10:32'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:10:35'!
ERROR!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 21:11:17' prior: 50916901!
checkWinnerX

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .
	
	(winningPositions includes: XPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true] ifFalse: [	currentState _ TerniLaPiliPlayingO with: self. ^false].
	

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 21:11:24' prior: 50917493!
checkWinnerO

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	

	(winningPositions includes: OPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] ifFalse: [	currentState _ TerniLaPiliPlayingX with: self. ^false.].

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:11:28'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 21:11:28'!
FAILURE!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 21:11:28'!
FAILURE!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 21:11:28'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:11:30'!
FAILURE!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 21:14:05' prior: 50919924!
checkWinnerO

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .	

	(winningPositions includes: OPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] ifFalse: [	currentState _ TerniLaPiliPlayingX with: self. ^false.].

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:15:27'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 21:15:27'!
FAILURE!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 21:15:27'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 21:15:28'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 21:15:28'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 21:15:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 21:15:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 21:15:28'!
FAILURE!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 21:15:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 21:15:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 21:15:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 21:15:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 21:15:28'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 21:15:28'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:15:30'!
FAILURE!
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 21:19:09' prior: 50918943!
putOAt: aPoint.
	^game PlayingXPutOAt: aPoint.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:40:55'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 21:40:55'!
FAILURE!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 21:40:55'!
FAILURE!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 21:40:55'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:40:57'!
FAILURE!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/1/2020 21:45:33'!
PlayingXPutOAt: aPoint! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/1/2020 21:47:54' prior: 50920383!
PlayingXPutOAt: aPoint
	^ self error: self class shouldPlayPlayerOErrorDescription.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:47:56'!
FAILURE!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 21:47:56'!
FAILURE!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 21:47:56'!
FAILURE!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 21:47:56'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 21:47:58'!
FAILURE!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/1/2020 22:20:14' prior: 50920387!
PlayingXPutOAt: aPoint
	^ self error: self class shouldPlayPlayerXErrorDescription.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 22:20:19'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 22:20:19'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 22:20:19'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 22:20:19'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 22:20:19'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 22:20:19'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 22:20:19'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 22:20:19'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 22:20:19'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:20:19'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:20:19'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:20:19'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:20:20'!
FAILURE!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 22:20:20'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:20:20'!
FAILURE!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:21:15'!
FAILURE!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 22:21:15'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:21:15'!
FAILURE!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 22:21:57' prior: 50919893!
checkWinnerX

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .
	
	(winningPositions includes: XPositions) ifTrue:  [currentState _ TerniLaPiliGameOver with: self. ^true] ifFalse: [	currentState _ TerniLaPiliPlayingO with: self. ^false].
	

! !
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 22:22:24'!
putOAt: aPoint
	^ self error: TerniLapili theGameIsOverErrorDescription.! !
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 22:22:31'!
putXAt: aPoint
	^ self error: TerniLapili theGameIsOverErrorDescription.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 22:22:33'!
PASSED!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 22:25:17'!
checkWinner: aCollection

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .	

	(winningPositions includes: OPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] ifFalse: [	currentState _ TerniLaPiliPlayingX with: self. ^false.].

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 22:25:37' prior: 50920967!
checkWinner: aCollection

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .	

	(winningPositions includes: aCollection) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] ifFalse: [	currentState _ TerniLaPiliPlayingX with: self. ^false.].

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 22:34:45' prior: 50920998!
checkWinner: aCollection

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .	

	(winningPositions includes: aCollection) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] 
	                                                         ifFalse: [	
											(self currentPlayer = #O) ifTrue: [
											currentState _ TerniLaPiliPlayingX with: self.]
											ifFalse: [currentState _ TerniLaPiliPlayingO with: self.]. 
						    																	
										^false.].

! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/1/2020 22:35:38' prior: 50918802!
PlayingOPutOAt: aPoint
	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinner: self currentPlayer.

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 22:38:21' prior: 50921030!
checkWinner: aPlayer

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 currentPlayerCollection possibleNextState |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .	

	(self currentPlayer = #O) ifTrue: [currentPlayerCollection _ OPositions . possibleNextState _ TerniLaPiliPlayingX with: self.] ifFalse: [currentPlayerCollection _ XPositions . possibleNextState _ TerniLaPiliPlayingO with: self.].
	
	(winningPositions includes: currentPlayerCollection) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] 
	                                                         ifFalse: [ | curentState |	
											curentState _ possibleNextState.					
										^false.].

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 22:38:50' prior: 50921079!
checkWinner: aPlayer

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 currentPlayerCollection possibleNextState |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .	

	(self currentPlayer = #O) ifTrue: [currentPlayerCollection _ OPositions . possibleNextState _ TerniLaPiliPlayingX with: self.] ifFalse: [currentPlayerCollection _ XPositions . possibleNextState _ TerniLaPiliPlayingO with: self.].
	
	(winningPositions includes: currentPlayerCollection) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] 
	                                                         ifFalse: [	currentState _ possibleNextState.														^false.].

! !

!methodRemoval: TerniLapili #checkWinnerO stamp: 'G. B. 11/1/2020 22:39:02'!
checkWinnerO

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .	

	(winningPositions includes: OPositions) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] ifFalse: [	currentState _ TerniLaPiliPlayingX with: self. ^false.].

!

!methodRemoval: TerniLapili #checkWinnerX stamp: 'G. B. 11/1/2020 22:39:06'!
checkWinnerX

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .
	
	(winningPositions includes: XPositions) ifTrue:  [currentState _ TerniLaPiliGameOver with: self. ^true] ifFalse: [	currentState _ TerniLaPiliPlayingO with: self. ^false].
	

!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/1/2020 22:39:44' prior: 50921069!
PlayingOPutOAt: aPoint
	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinner.

! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/1/2020 22:40:19' prior: 50921225!
PlayingOPutOAt: aPoint
	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinner: self currentPlayer.

! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/1/2020 22:40:28' prior: 50921234!
PlayingOPutOAt: aPoint
	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinner: #O.

! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 22:40:46' prior: 50917582!
putXAt: aPoint 
	
	currentState canPlayX.

	self isValidPosition: aPoint.


	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinner: #X.


! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 22:40:58'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 22:40:58'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 22:41:00'!
ERROR!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 22:41:22' prior: 50917905!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].

	currentState canPlayX.
	
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	self isValidPosition: aNextPosition.


	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	self checkWinner: #X.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 22:41:31' prior: 50918080!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	"""currentState isMovingO."""
	
	currentState canPlayO.
	
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	self isValidPosition: aNextPosition.

	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	self checkWinner: #O.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:41:33'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 22:41:33'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 22:41:33'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 22:41:33'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 22:41:33'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 22:41:33'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 22:41:33'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 22:41:33'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 22:41:33'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 22:41:33'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:41:35'!
ERROR!
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/1/2020 22:43:45' prior: 50911608!
hasPlayerOWon

	^ self checkWinner: #O .! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/1/2020 22:43:54' prior: 50911612!
hasPlayerXWon

	^ self checkWinner: #X .! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:44:02'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 22:44:02'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 22:44:02'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 22:44:02'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 22:44:02'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 22:44:02'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 22:44:02'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 22:44:02'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 22:44:02'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 22:44:02'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:44:04'!
ERROR!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 22:46:11' prior: 50921122!
checkWinner: aPlayer

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 currentPlayerCollection possibleNextState |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .	
	
	(currentState = TerniLaPiliGameOver new) ifTrue: [^true].

	(self currentPlayer = #O) ifTrue: [currentPlayerCollection _ OPositions . possibleNextState _ TerniLaPiliPlayingX with: self.] ifFalse: [currentPlayerCollection _ XPositions . possibleNextState _ TerniLaPiliPlayingO with: self.].
	
	(winningPositions includes: currentPlayerCollection) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] 
	                                                         ifFalse: [	currentState _ possibleNextState.														^false.].

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:46:19'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 22:46:19'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 22:46:19'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 22:46:19'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 22:46:19'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 22:46:19'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 22:46:19'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 22:46:19'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 22:46:19'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 22:46:19'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:46:21'!
ERROR!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/1/2020 22:46:56' prior: 50921712!
checkWinner: aPlayer

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 currentPlayerCollection possibleNextState |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .	
	
	(currentState class = TerniLaPiliGameOver) ifTrue: [^true].

	(self currentPlayer = #O) ifTrue: [currentPlayerCollection _ OPositions . possibleNextState _ TerniLaPiliPlayingX with: self.] ifFalse: [currentPlayerCollection _ XPositions . possibleNextState _ TerniLaPiliPlayingO with: self.].
	
	(winningPositions includes: currentPlayerCollection) ifTrue:  [currentState _ TerniLaPiliGameOver new. ^true.] 
	                                                         ifFalse: [	currentState _ possibleNextState.														^false.].

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 22:46:58'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 22:46:59'!
PASSED!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 22:47:51' prior: 50921253!
putXAt: aPoint 
	
	self isValidPosition: aPoint.


	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinner: #X.


! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 22:48:05' prior: 50922061!
putXAt: aPoint 
	
	self isValidPosition: aPoint.

	currentState putXAt: aPoint.


	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinner: #X.


! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/1/2020 22:48:10' prior: 50922071!
putXAt: aPoint 
	
	self isValidPosition: aPoint.

	currentState putXAt: aPoint.


"	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].
	
	
	XPositions add: aPoint .
	self checkWinner: #X.
"

! !
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 22:49:06'!
putXAt: aPoint.
	^game PlayingXPutXAt: aPoint.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 22:49:24'!
putXAt: aPoint.
	^game PlayingOPutXAt: aPoint.! !
!TerniLaPiliMovingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 22:49:49'!
putOAt: aPoint.
	^game MovingXPutOAt: aPoint.! !
!TerniLaPiliMovingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 22:49:59'!
putXAt: aPoint.
	^game MovingXPutXAt: aPoint.! !
!TerniLaPiliMovingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 22:50:16'!
putOAt: aPoint.
	^game MovingOPutOAt: aPoint.! !
!TerniLaPiliMovingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/1/2020 22:50:23'!
putXAt: aPoint.
	^game MovingOPutXAt: aPoint.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 22:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 22:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 22:50:29'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 22:50:29'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 22:50:29'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 22:50:29'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 22:50:29'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 22:50:29'!
ERROR!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 22:50:31'!
ERROR!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/1/2020 22:51:10'!
PlayingXPutXAt: aPoint
	
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	XPositions add: aPoint.
	self checkWinner: #X.

! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/1/2020 22:51:19'!
PlayingOPutXAt: aPoint
	^ self error: self class shouldPlayPlayerXErrorDescription.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 22:51:23'!
FAILURE!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 22:51:23'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 22:51:23'!
FAILURE!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/1/2020 22:51:48' prior: 50922262!
PlayingOPutXAt: aPoint
	^ self error: self class shouldPlayPlayerOErrorDescription.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/1/2020 22:51:55'!
PASSED!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 00:46:45'!
PASSED!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 00:47:57'!
PASSED!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 00:51:45' prior: 50921244!
PlayingOPutOAt: aPoint
	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	self checkWinner: #O.

! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 00:55:56' prior: 50922792!
PlayingOPutOAt: aPoint
	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	currentState _ TerniLapiliState corresponding: self.
	
	"self checkWinner: #O."

! !
!TerniLapiliState class methodsFor: 'nil' stamp: 'G. B. 11/2/2020 00:58:20'!
corresponding: aGame

	| class |
	class _ self allSubclasses detect: [:aClass | aClass correspondsTo: aGame].
	^class new initializeWith: aGame.! !
!TerniLaPiliGameOver class methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 00:59:14'!
correspondsTo: aGame
	! !
!TerniLaPiliGameOver class methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:00:17' prior: 50922820!
correspondsTo: aGame
! !
!TerniLaPiliGameOver class methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:01:21' prior: 50922825!
correspondsTo: aGame
	^aGame hasPlayerXWon or: [aGame hasPlayerOWon].! !
!TerniLaPiliMovingO class methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:02:04'!
correspondsTo: aGame! !
!TerniLaPiliMovingO class methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:04:04' prior: 50922836!
correspondsTo: aGame
	^aGame isPlayingX  and: [aGame isOver not].! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/2/2020 01:04:51' prior: 50914417!
isOver

	^ self hasPlayerXWon or: [self hasPlayerOWon].! !
!TerniLaPiliMovingO class methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:06:16' prior: 50922841!
correspondsTo: aGame
	^aGame isPlayingX  and: [aGame isOver not] and: [aGame OPositions size = 3] .! !
!TerniLaPiliMovingX class methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:06:37'!
correspondsTo: aGame
	^aGame isPlayingO  and: [aGame isOver not] and: [aGame XPositions size = 3] .! !
!TerniLaPiliPlayingO class methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:06:58'!
correspondsTo: aGame
	^aGame isPlayingX  and: [aGame isOver not] and: [aGame OPositions size < 3] .! !
!TerniLaPiliPlayingX class methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:07:06'!
correspondsTo: aGame
	^aGame isPlayingX  and: [aGame isOver not] and: [aGame OPositions size < 3] .! !
!TerniLaPiliPlayingX class methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:07:25' prior: 50922873!
correspondsTo: aGame
	^aGame isPlayingO  and: [aGame isOver not] and: [aGame XPositions size < 3] .! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:07:27'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:07:27'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:07:27'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:07:27'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:07:27'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:07:27'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:07:27'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:07:27'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:07:27'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:07:27'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:07:27'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:07:27'!
FAILURE!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:07:27'!
FAILURE!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:07:27'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:07:27'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:07:28'!
FAILURE!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:07:28'!
FAILURE!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:07:28'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:07:28'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:07:28'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:07:28'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:07:28'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:07:30'!
ERROR!
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/2/2020 01:10:15' prior: 50921888!
checkWinner: aPlayer

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 currentPlayerCollection |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .	
	

	^winningPositions includes: aPlayer .

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/2/2020 01:10:55' prior: 50923019!
checkWinner: aPositionCollection

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 aPlayer |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .	
	

	^winningPositions includes: aPlayer .

! !
!TerniLapili methodsFor: 'game over' stamp: 'G. B. 11/2/2020 01:11:05' prior: 50923047!
checkWinner: aPositionCollection

	|winningPositions vertical0 vertical1 vertical2 horizontal0 horizontal1 horizontal2 diagonal0 diagonal1 |
	vertical0 _ Set with: 0@0 with: 0@1 with: 0@2.
	vertical1 _ Set with: 1@0 with: 1@1 with: 1@2.
	vertical2 _ Set with: 2@0 with: 2@1 with: 2@2.
	
	horizontal0 _ Set with: 0@0 with: 1@0 with: 2@0.
	horizontal1 _ Set with: 0@1 with: 1@1 with: 2@1.
	horizontal2 _ Set with: 0@2 with: 1@2 with: 2@2.
	
	diagonal0 _ Set with: 	0@0 with: 1@1 with: 2@2.
	diagonal1 _ Set with: 	0@2 with: 1@1 with: 2@0.
	
	winningPositions _ Set with: vertical0 with: vertical1 with: vertical2 with: horizontal0 with: horizontal1 with: horizontal2.
	winningPositions  add: diagonal0 .
	winningPositions  add: diagonal1 .	
	

	^winningPositions includes: aPositionCollection .

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:11:15'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:11:15'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:11:15'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:11:15'!
FAILURE!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:11:15'!
FAILURE!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:11:15'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:11:15'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:11:15'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:11:15'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:11:15'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:11:15'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:11:15'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:11:17'!
ERROR!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:12:44' prior: 50922253!
PlayingXPutXAt: aPoint
	
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	XPositions add: aPoint.
	self checkWinner: XPositions.

! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/2/2020 01:12:52' prior: 50921571!
hasPlayerOWon

	^ self checkWinner: XPositions .! !
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/2/2020 01:12:59' prior: 50921576!
hasPlayerXWon

	^ self checkWinner: XPositions .! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:13:18' prior: 50921417!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	"""currentState isMovingO."""
	
	currentState canPlayO.
	
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	self isValidPosition: aNextPosition.

	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	self checkWinner: XPositions.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:13:28' prior: 50923253!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	"""currentState isMovingO."""
	
	currentState canPlayO.
	
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	self isValidPosition: aNextPosition.

	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	self checkWinner: OPositions.! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:13:42' prior: 50921396!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].

	currentState canPlayX.
	
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	self isValidPosition: aNextPosition.


	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	self checkWinner: XPositions.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:13:45'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:13:45'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:13:45'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:13:45'!
FAILURE!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:13:45'!
ERROR!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:13:45'!
FAILURE!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:13:46'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:13:46'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:13:46'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:13:46'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:13:46'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:13:46'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:13:46'!
ERROR!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:13:48'!
ERROR!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:15:14' prior: 50922801!
PlayingOPutOAt: aPoint
	
	(OPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	OPositions add: aPoint.
	currentState _ TerniLapiliState corresponding: self.
	

! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:15:21' prior: 50923234!
PlayingXPutXAt: aPoint
	
	(XPositions size = 3) ifTrue: [^ self error: self class playersCantUseMoreThan3PositionsErrorDescription].

	XPositions add: aPoint.
	currentState _ TerniLapiliState corresponding: self.

! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:15:29'!
FAILURE!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:15:29'!
FAILURE!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:15:29'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:15:29'!
FAILURE!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:15:29'!
FAILURE!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:15:29'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:15:29'!
FAILURE!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:15:29'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:15:30'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:15:30'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:15:30'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:15:30'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:15:30'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:15:30'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:15:30'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:15:30'!
ERROR!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:15:54'!
FAILURE!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:18:22'!
MovingXPutXAt: aPoint
	
! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:18:42'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:18:42'!
FAILURE!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:18:43'!
FAILURE!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:18:43'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:18:43'!
FAILURE!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:18:43'!
FAILURE!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:18:43'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:18:43'!
FAILURE!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:18:43'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:18:43'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:18:43'!
ERROR!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:19:14' prior: 50923603!
MovingXPutXAt: aPoint
	^self error: self class playersCantUseMoreThan3PositionsErrorDescription.
! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:19:16'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:19:16'!
FAILURE!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:19:16'!
FAILURE!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:19:16'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:19:16'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:19:17'!
FAILURE!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:19:17'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:19:17'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:19:17'!
ERROR!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:19:35'!
FAILURE!
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/2/2020 01:20:20' prior: 50923243!
hasPlayerOWon

	^ self checkWinner: OPositions .! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:20:29'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:20:29'!
FAILURE!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:20:29'!
FAILURE!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:20:29'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:20:29'!
ERROR!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:20:29'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:20:29'!
ERROR!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:22:12' prior: 50922082!
putXAt: aPoint 
	
	self isValidPosition: aPoint.

	currentState putXAt: aPoint.


! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:22:17' prior: 50918231!
putOAt: aPoint 

	self isValidPosition: aPoint.

	currentState putOAt: aPoint.

! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:22:26' prior: 50923297!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].

	currentState canPlayX.
	
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	self isValidPosition: aNextPosition.


	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:22:30' prior: 50923275!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	"""currentState isMovingO."""
	
	currentState canPlayO.
	
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	self isValidPosition: aNextPosition.

	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:22:43' prior: 50924039!
moveOFrom: aPosition to: aNextPosition

	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].
	
	
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	self isValidPosition: aNextPosition.

	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:22:49' prior: 50924019!
moveXFrom: aPosition to: aNextPosition

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].

	
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].

	self isValidPosition: aNextPosition.


	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].
	
	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:25:17' prior: 50924060!
moveOFrom: aPosition to: aNextPosition

	self isValidPosition: aNextPosition.
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].


	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].	
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:25:36' prior: 50924080!
moveXFrom: aPosition to: aNextPosition

	self isValidPosition: aNextPosition.
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].

	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].	
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:26:20' prior: 50924120!
moveXFrom: aPosition to: aNextPosition

	self isValidPosition: aNextPosition.
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].


	currentState moveXFrom: aPosition to: aNextPosition.

"	XPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].	
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	"
	
	
! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:26:50' prior: 50924100!
moveOFrom: aPosition to: aNextPosition

	self isValidPosition: aNextPosition.
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].


	currentState moveOFrom: aPosition to: aNextPosition.
	
"	OPositions size < 3 ifTrue: 	[^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription].	
	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
"	! !

!methodRemoval: TerniLaPiliGameOver #canPlayX stamp: 'G. B. 11/2/2020 01:27:14'!
canPlayX
	^ self error: TerniLapili theGameIsOverErrorDescription.!

!methodRemoval: TerniLaPiliGameOver #canPlayO stamp: 'G. B. 11/2/2020 01:27:17'!
canPlayO
	^ self error: TerniLapili theGameIsOverErrorDescription.!

!methodRemoval: TerniLaPiliPlayingO #canPlayO stamp: 'G. B. 11/2/2020 01:27:25'!
canPlayO
	^true.!

!methodRemoval: TerniLaPiliPlayingO #canPlayX stamp: 'G. B. 11/2/2020 01:27:30'!
canPlayX
	^self error: TerniLapili shouldPlayPlayerOErrorDescription.!

!methodRemoval: TerniLaPiliPlayingX #canPlayX stamp: 'G. B. 11/2/2020 01:27:35'!
canPlayX
	^ true.!

!methodRemoval: TerniLaPiliPlayingX #canPlayO stamp: 'G. B. 11/2/2020 01:27:39'!
canPlayO
	^ self error: TerniLapili shouldPlayPlayerXErrorDescription.!
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:27:56' prior: 50919241!
initializeWith: aGame
	game _ aGame.! !
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:29:37'!
moveXFrom: aPosition to: aNextPosition.
	^game error: game class theGameIsOverErrorDescription 		.! !
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:29:40'!
moveOFrom: aPosition to: aNextPosition.
	^game error: game class theGameIsOverErrorDescription 		.! !
!TerniLaPiliMovingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:29:57'!
moveXFrom: aPosition to: aNextPosition.
! !
!TerniLaPiliMovingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:30:16' prior: 50924225!
moveXFrom: aPosition to: aNextPosition.
	! !
!TerniLaPiliMovingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:31:14' prior: 50924230!
moveXFrom: aPosition to: aNextPosition.
	game MovingOMoveXFrom: aPosition to: aNextPosition.! !
!TerniLaPiliMovingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:31:28'!
moveOFrom: aPosition to: aNextPosition.
	game MovingOMoveOFrom: aPosition to: aNextPosition.! !
!TerniLaPiliMovingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:31:57'!
moveXFrom: aPosition to: aNextPosition.
	game MovingXMoveXFrom: aPosition to: aNextPosition.! !
!TerniLaPiliMovingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:32:06'!
moveOFrom: aPosition to: aNextPosition.
	game MovingXMoveOFrom: aPosition to: aNextPosition.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:32:25'!
moveXFrom: aPosition to: aNextPosition.
	game PlayingOMoveXFrom: aPosition to: aNextPosition.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:32:34'!
moveOFrom: aPosition to: aNextPosition.
	game PlayingOMoveOFrom: aPosition to: aNextPosition.! !
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:32:53'!
moveOFrom: aPosition to: aNextPosition.
	game PlayingXMoveOFrom: aPosition to: aNextPosition.! !
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:33:02'!
moveXFrom: aPosition to: aNextPosition.
	game PlayingXMoveXFrom: aPosition to: aNextPosition.! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:33:29'!
PlayingXMoveXFrom: aPosition to: aNextPosition! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:34:19' prior: 50924283!
PlayingXMoveXFrom: aPosition to: aNextPosition
	^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription.

	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:34:42'!
PlayingOMoveOFrom: aPosition to: aNextPosition
	^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription.

	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:35:07'!
PlayingXMoveOFrom: aPosition to: aNextPosition
	^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription.

	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:35:17'!
PlayingOMoveXFrom: aPosition to: aNextPosition
	^ self error: self class playersCantMoveAPositionBeforeHaving3PositionsErrorDescription.

	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:35:31' prior: 50924309!
PlayingOMoveXFrom: aPosition to: aNextPosition
	^ self error: self class shouldPlayPlayerOErrorDescription .

	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:35:39' prior: 50924302!
PlayingXMoveOFrom: aPosition to: aNextPosition
	^ self error: self class shouldPlayPlayerOErrorDescription.

	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:36:10' prior: 50924324!
PlayingXMoveOFrom: aPosition to: aNextPosition
	^ self error: self class shouldPlayPlayerXErrorDescription.

	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:36:33'!
MovingXMoveOFrom: aPosition to: aNextPosition
	^ self error: self class shouldPlayPlayerXErrorDescription.

	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:36:43'!
MovingOMoveXFrom: aPosition to: aNextPosition
	^ self error: self class shouldPlayPlayerOErrorDescription.

	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:37:23'!
MovingXMoveXFrom: aPosition to: aNextPosition
	^ self error: self class shouldPlayPlayerXErrorDescription.

	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:37:28'!
MovingOMoveOFrom: aPosition to: aNextPosition
	^ self error: self class shouldPlayPlayerXErrorDescription.

	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:38:21' prior: 50924356!
MovingOMoveOFrom: aPosition to: aNextPosition

	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	
	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:38:58' prior: 50924350!
MovingXMoveXFrom: aPosition to: aNextPosition
	
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	
	
! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:39:00'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:39:00'!
FAILURE!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:39:00'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:39:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:39:01'!
FAILURE!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:39:01'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:39:01'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:39:01'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:39:01'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:39:01'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:39:01'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:39:01'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:39:09'!
ERROR!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:40:25'!
ERROR!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:40:25'!
FAILURE!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:40:25'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:40:25'!
FAILURE!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:40:25'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:40:28'!
ERROR!
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/2/2020 01:41:02' prior: 50912326!
isPlayingX
	
	^ currentState currentPlayer = #X! !
!TerniLaPiliMovingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:41:26'!
currentPlayer
	^#O.! !
!TerniLaPiliMovingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:41:32'!
currentPlayer
	^#X.! !
!TerniLaPiliPlayingO methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:41:39'!
currentPlayer
	^#O.! !
!TerniLaPiliPlayingX methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:41:44'!
currentPlayer
	^#X.! !
!TerniLaPiliGameOver methodsFor: 'as yet unclassified' stamp: 'G. B. 11/2/2020 01:41:55'!
currentPlayer
	^ self error: TerniLapili theGameIsOverErrorDescription.! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:41:57'!
FAILURE!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:41:57'!
FAILURE!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:41:57'!
ERROR!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:41:57'!
FAILURE!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:41:57'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:41:58'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:41:58'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:41:58'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:42:00'!
ERROR!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:43:29' prior: 50924363!
MovingOMoveOFrom: aPosition to: aNextPosition

	(OPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].	
	OPositions add: aNextPosition.
	OPositions remove: aPosition.
	
	currentState _ TerniLapiliState corresponding: self.
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:43:41' prior: 50924374!
MovingXMoveXFrom: aPosition to: aNextPosition
	
	(XPositions includes: aPosition) ifFalse:[^ self error: self class playersCantMoveAPositionThatIsNotHis ].	
	XPositions add: aNextPosition.
	XPositions remove: aPosition.
	
	currentState _ TerniLapiliState corresponding: self.
! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:43:50'!
FAILURE!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:43:50'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:43:50'!
FAILURE!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:44:37'!
FAILURE!
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 11/2/2020 01:46:11' prior: 50911353!
test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.
	
	self 
	should: [terniLapili moveXFrom: 1@2 to: 0@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantMoveAPositionThatIsNotHis ].
	
! !
!TerniLapilliTest methodsFor: 'move positions tests' stamp: 'G. B. 11/2/2020 01:46:15' prior: 50924971!
test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis
	
	|terniLapili |

	terniLapili := TerniLapili new.
	
	terniLapili putXAt: 0@0.
	terniLapili putOAt: 1@2.
	terniLapili putXAt: 2@0.
	terniLapili putOAt: 1@1.
	terniLapili putXAt: 2@1.
	terniLapili putOAt: 0@2.
	
	self 
	should: [terniLapili moveXFrom: 1@2 to: 0@1.]
	raise: Error 
	withExceptionDo: [ :anError |
		self assert: anError messageText = TerniLapili playersCantMoveAPositionThatIsNotHis ].
	
! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:47:00'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:47:01'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:47:01'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:47:01'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:47:01'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:47:01'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:47:01'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:47:01'!
PASSED!
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:49:14' prior: 50924140!
moveXFrom: aPosition to: aNextPosition

	self isValidPosition: aNextPosition.
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].


	currentState moveXFrom: aPosition to: aNextPosition.

! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:49:18' prior: 50924161!
moveOFrom: aPosition to: aNextPosition

	self isValidPosition: aNextPosition.
	(self isAdistanceOne: aPosition to: aNextPosition) ifFalse:[^ self error: self class playersCanOnlyMoveToADistance1PositionErrorDescription ].


	currentState moveOFrom: aPosition to: aNextPosition.
	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:50:27'!
MovingXPutOAt: aPosition to: aNextPosition
	^ self error: self class shouldPlayPlayerXErrorDescription.

	
! !
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:53:01'!
MovingXPutOAt: aPosition
	^ self error: self class shouldPlayPlayerXErrorDescription.

	
! !

!methodRemoval: TerniLapili #MovingXPutOAt:to: stamp: 'G. B. 11/2/2020 01:53:07'!
MovingXPutOAt: aPosition to: aNextPosition
	^ self error: self class shouldPlayPlayerXErrorDescription.

	
!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:53:40'!
MovingOPutOAt: aPoint
	^self error: self class playersCantUseMoreThan3PositionsErrorDescription.
! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:53:43'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:53:44'!
PASSED!
!TerniLapili methodsFor: 'moves - private' stamp: 'G. B. 11/2/2020 01:54:37'!
MovingOPutXAt: aPosition
	^ self error: self class shouldPlayPlayerOErrorDescription.

	
! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:54:39'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:54:40'!
PASSED!
!TerniLapili methodsFor: 'accessing' stamp: 'G. B. 11/2/2020 01:56:55' prior: 50917560!
isValidPosition: aPoint
	

	(aPoint x  > 2 or: aPoint y  > 2) ifTrue: [^ self error: self class playersShouldChooseAValidPosition].
	(aPoint x  < 0 or: aPoint y  < 0) ifTrue: [^ self error: self class playersShouldChooseAValidPosition].
	
	((XPositions includes: aPoint 	) or: [OPositions includes: aPoint]) ifTrue: [^ self error: self class playersShouldChooseAnEmptyPosition].
! !
!TerniLapili methodsFor: 'moves' stamp: 'G. B. 11/2/2020 01:57:36' prior: 50911691!
isAdistanceOne: aPosition to: aNextPosition

	^ ((aPosition x - aNextPosition x) abs <= 1) and: [ (aPosition y - aNextPosition y) abs <= 1].! !

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:58:50'!
PASSED!

!testRun: #TerniLapilliTest #test00TheGameStartWithThePlayersWithoutPosition stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test01TheFirstMoveIsForPlayerX stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test02shouldRaiseErrorIfPlayerOstartsTheGame stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test03PlayerOPlayAfterPlayerX stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test04PlayerXPlayAfterPlayerO stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test05shouldRaiseErrorIfXplaysAfterX stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test06shouldRaiseErrorIfOplaysAfterO stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test07shouldSavePositionIfPlayerXPutAvalidPosition stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test09shouldSavePositionIfPlayerOPutsAValidPosition stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test11shouldRaiseErrorIfPlayerXPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test12shouldRaiseErrorIfPlayerOPlaysOccupiedPosition stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test13ShouldRaiseErrorIfPlayerXTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test14ShouldRaiseErrorIfPlayerOTriesToUseMoreThan3Positions stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test15shouldRaiseErrorIfAPlayerXTriesToMoveAPositionBeforeHaving3Positions stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test16PlayerXCanOnlyMoveAPositionToAnEmptyPositionAndInsideTheBoard stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test17shouldRaiseErrorIfPlayerXTriesToMoveAPositionThatIsNotHis stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test18PlayersCanOnlyMoveToADistance1Position stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test19RulesFromPlayerXApplyToPlayerO stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test20PlayerXWinsIfHeMakesVertical0 stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test21PlayerXWinsIfHeMakesVertical1 stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test22PlayerXWinsIfHeMakesVertical2 stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test23PlayerOWinsIfHeMakesAnyVerticals stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal0 stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal1 stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test24PlayerXWinsIfHeMakesHorizontal2 stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test25PlayerXWinsIfHeMakesDiagonal0 stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #test26PlayerXWinsIfHeMakesDiagonal1 stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #testxxPlayersCanOnlyMoveInTheirTurn stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #testxxWhenTheGameIsOverNoOneCanMove stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerOGoesBeyondABoardLimit stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBelowFloor stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondLeftWall stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRightWall stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #testxxshouldRaiseErrorIfPlayerXGoesBeyondRoof stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!

!testRun: #TerniLapilliTest #testyyPositionIsEmptyAfterAMove stamp: 'G. B. 11/2/2020 01:59:08'!
PASSED!